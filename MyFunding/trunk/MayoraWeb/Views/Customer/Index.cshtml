@using Core.Web.Helpers
@using MyWeb.Controllers.Customers
@using MyWeb.ViewModels.Customers
@model dynamic
@*@model MyWeb.Forms.Customers.CustomerForm
    @{
        var customer = Html.Angular().ModelFor("vm.customer");
        ViewBag.Title = "Customer";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }*@

<div ng-controller="CustomerController as vm">
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    Customer
                    <button type="button" class="btn btn-info btn-circle pull-right" ng-click="vm.add()">
                        <i class="glyphicon glyphicon-plus"></i>
                    </button>
                </div>
                <div class="panel-body">
                    <button type="button" class="btn btn-info btn-circle pull-right" ng-click="vm.exportWord()">
                        Export Word
                    </button>

                    @(Html.Angular()
                .GridFor("vm.customersFunction")
                .GetAll("vm.customersGetAll")
                //.Title("Customer List")
                .Message("vm.message")
                .TableActions("vm.tableActions")
                .RefreshData("vm.refreshData")
                .OnLoad("vm.onLoadTableCustomer")
                .TotalItems("vm.totalItems")
                .Response("vm.response")
                .RowStyle("vm.rowStyle")
                .CsvFilename("CustomerList.csv")
                .Init("vm.onLoadTableCustomer")
                .HideSearch()
                .EnableFilter(enableFilter: true)
                        .onBlurEditedCell("vm.onBlurEditedCell")
                //.EnableSelect(false)
                            //.AutoLoad(true)
                            //.SelectColumn(true)
                .Columns<CustomerViewModel>(config =>
                {
                    //config.Add(x => x, "Select", null, "<div><a href='' ng-click='grid.appScope.tableActions.onSelect(row.entity)'><i class='fa fa-edit fa-lg'></i></a></div>");
                    config.Add(x => x.CustomerType, "Customer Type", null, "<div class='ui-grid-cell-contents' style='background-color:red'><span ng-bind='row.entity.customerType'></span></div>");
                    config.Add(x => x.Name, "Name", null, "<div class='ui-grid-cell-contents' style='background-color:green'><span ng-bind='row.entity.name'></span></div>");
                    config.Add(x => x.Address, enableCellEdit: true, enableFiltering: true);
                    config.Add(x => x.Phone, enableCellEdit: true);
                    config.Add(x => x.Email, enableCellEdit: true, enableFiltering: true);
                    config.Add(x => x.StatusData, enableCellEdit: true);
                    config.Add(x => x.TerminationDate, "Date Joined", "dateFormat", enableCellEdit: true, type: "date", enableFiltering: true);
                    config.Add(x => x.CreateDate, "Create Date", "dateFormat");
                    config.Add(x => x.UpdateDate, "Update Date", "dateFormat");
                    config.Add(x => x.ApproveDate, "Approve Date", "dateFormat");
                    config.Add(x => x, "Action", null, "<div><a href='' ng-click='grid.appScope.tableActions.onEdit(row.entity)'><i class='fa fa-edit fa-lg'></i></a> <a href='' ng-click='grid.appScope.tableActions.onDetail(row.entity)'><i class='fa fa-pencil fa-lg'></i></a> <a href='' ng-click='grid.appScope.tableActions.onDelete(row.entity.customerId)'><i class='fa fa-trash fa-lg'></i></a></div>");
                }))


                    
                </div>
                @*<div class="panel-footer">
                        Panel Footer
                    </div>*@
            </div>
        </div>
        <!-- /.col-lg-12 -->
    </div>



    @*<table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.CustomerType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TerminationDate)
                </th>
                <th>Action</th>
            </tr>

            <tr ng-repeat="customer in vm.customers" customer="customer">
                <td>{{customer.customerType}}</td>
                <td>{{customer.name}}</td>
                <td>{{customer.address}}</td>
                <td>{{customer.phone}}</td>
                <td>{{customer.email}}</td>
                <td>{{customer.terminationDate}}</td>

                <td>
                    <a href="" ng-click="vm.edit(customer)"><i class="fa fa-edit fa-lg"></i></a>
                    <a href="" ng-click="vm.detail(customer)"><i class="fa fa-pencil fa-lg"></i></a>
                    <a href="" ng-click="vm.delete(customer)"><i class="fa fa-trash fa-lg"></i></a>
                </td>
            </tr>
        </table>*@

    @*<table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ImageClassName)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ImageClassName)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ImageClassId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ImageClassId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ImageClassId })
                    </td>
                </tr>
            }

        </table>*@
</div>
